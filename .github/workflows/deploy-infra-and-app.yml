name: Provision & Deploy to DO

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Validate
        working-directory: infra
        run: terraform validate

      - name: Terraform Apply
        working-directory: infra
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
        run: terraform apply -auto-approve -var="digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }}" -var="ssh_key_id=${{ secrets.SSH_KEY_ID }}"

      - name: Output Infrastructure IPs
        working-directory: infra
        id: tf_output
        run: |
          echo "DROPLET_IP=$(terraform output -raw floating_ip)" >> $GITHUB_OUTPUT

  deploy:
    name: SSH & Deploy Application
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Wait for droplet to be up
        run: |
          for i in {1..12}; do
            nc -zv ${{ needs.terraform.outputs.DROPLET_IP }} 22 && break
            echo 'Waiting for SSH...' && sleep 10
          done

      - name: Add SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: "unnecessary"

      - name: Add DigitalOcean droplet to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ needs.terraform.outputs.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Clone or Update Repo on Droplet
        run: |
          ssh -o StrictHostKeyChecking=accept-new root@${{ needs.terraform.outputs.DROPLET_IP }} << 'EOF'
            if [ -d /bn-trading ]; then
              cd /bn-trading && git pull origin main
            else
              git clone https://github.com/${{ github.repository }} /bn-trading
            fi
          EOF

      - name: Start Docker Compose on Droplet
        run: |
          ssh root@${{ needs.terraform.outputs.DROPLET_IP }} << 'EOF'
            cd /bn-trading
            docker-compose pull
            docker-compose up -d
          EOF
